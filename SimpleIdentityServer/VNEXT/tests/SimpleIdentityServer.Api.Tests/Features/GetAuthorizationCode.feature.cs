// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlow.GeneratedTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class GetAuthorizationCodeFeature : Xunit.IClassFixture<GetAuthorizationCodeFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GetAuthorizationCode.feature"
#line hidden
        
        public GetAuthorizationCodeFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GetAuthorizationCode", "As a resource owner and user of the client\r\nI should be able to retrieve an autho" +
                    "rization code", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(GetAuthorizationCodeFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GetAuthorizationCode")]
        [Xunit.TraitAttribute("Description", "Whether the resource owner is authenticated or not we want to re-authenticate him" +
            "")]
        public virtual void WhetherTheResourceOwnerIsAuthenticatedOrNotWeWantToRe_AuthenticateHim()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Whether the resource owner is authenticated or not we want to re-authenticate him" +
                    "", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("a mobile application MyHolidays is defined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.And("the redirection uri http://localhost is assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsInternal"});
            table11.AddRow(new string[] {
                        "PlanningApi",
                        "true"});
            table11.AddRow(new string[] {
                        "openid",
                        "true"});
#line 10
 testRunner.And("the scopes are defined", ((string)(null)), table11, "And ");
#line 14
 testRunner.And("the scopes openid,PlanningApi are assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "scope",
                        "response_type",
                        "client_id",
                        "redirect_uri",
                        "prompt"});
            table12.AddRow(new string[] {
                        "openid PlanningApi",
                        "code",
                        "MyHolidays",
                        "http://localhost",
                        "login"});
#line 16
 testRunner.When("requesting an authorization code", ((string)(null)), table12, "When ");
#line 21
 testRunner.Then("HTTP status code is 302", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
 testRunner.And("redirect to /Authenticate controller", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GetAuthorizationCode")]
        [Xunit.TraitAttribute("Description", "A resource owner is authenticated and we want to display only the consent screen")]
        public virtual void AResourceOwnerIsAuthenticatedAndWeWantToDisplayOnlyTheConsentScreen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A resource owner is authenticated and we want to display only the consent screen", ((string[])(null)));
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
 testRunner.Given("a mobile application MyHolidays is defined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
 testRunner.And("the redirection uri http://localhost is assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsInternal"});
            table13.AddRow(new string[] {
                        "PlanningApi",
                        "true"});
            table13.AddRow(new string[] {
                        "openid",
                        "true"});
#line 27
 testRunner.And("the scopes are defined", ((string)(null)), table13, "And ");
#line 31
 testRunner.And("the scopes openid,PlanningApi are assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Name"});
            table14.AddRow(new string[] {
                        "habarthierry@loki.be",
                        "thabart"});
#line 32
 testRunner.And("create a resource owner", ((string)(null)), table14, "And ");
#line 35
 testRunner.And("authenticate the resource owner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "scope",
                        "response_type",
                        "client_id",
                        "redirect_uri",
                        "prompt"});
            table15.AddRow(new string[] {
                        "openid PlanningApi",
                        "code",
                        "MyHolidays",
                        "http://localhost",
                        "consent"});
#line 37
 testRunner.When("requesting an authorization code", ((string)(null)), table15, "When ");
#line 42
 testRunner.Then("HTTP status code is 302", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
 testRunner.And("redirect to /Consent controller", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GetAuthorizationCode")]
        [Xunit.TraitAttribute("Description", "A resource owner is not authenticated and we want to display only the consent scr" +
            "een")]
        public virtual void AResourceOwnerIsNotAuthenticatedAndWeWantToDisplayOnlyTheConsentScreen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A resource owner is not authenticated and we want to display only the consent scr" +
                    "een", ((string[])(null)));
#line 45
this.ScenarioSetup(scenarioInfo);
#line 46
 testRunner.Given("a mobile application MyHolidays is defined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 47
 testRunner.And("the redirection uri http://localhost is assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsInternal"});
            table16.AddRow(new string[] {
                        "PlanningApi",
                        "true"});
            table16.AddRow(new string[] {
                        "openid",
                        "true"});
#line 48
 testRunner.And("the scopes are defined", ((string)(null)), table16, "And ");
#line 52
 testRunner.And("the scopes openid,PlanningApi are assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "scope",
                        "response_type",
                        "client_id",
                        "redirect_uri",
                        "prompt"});
            table17.AddRow(new string[] {
                        "openid PlanningApi",
                        "code",
                        "MyHolidays",
                        "http://localhost",
                        "consent"});
#line 54
 testRunner.When("requesting an authorization code", ((string)(null)), table17, "When ");
#line 59
 testRunner.Then("HTTP status code is 302", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 60
 testRunner.And("redirect to /Authenticate controller", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GetAuthorizationCode")]
        [Xunit.TraitAttribute("Description", "A resource owner is authenticated and he already has given his consent. We want t" +
            "o retrieve an authorization code for his consent")]
        public virtual void AResourceOwnerIsAuthenticatedAndHeAlreadyHasGivenHisConsent_WeWantToRetrieveAnAuthorizationCodeForHisConsent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A resource owner is authenticated and he already has given his consent. We want t" +
                    "o retrieve an authorization code for his consent", ((string[])(null)));
#line 62
this.ScenarioSetup(scenarioInfo);
#line 63
 testRunner.Given("a mobile application MyHolidays is defined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 64
 testRunner.And("the redirection uri http://localhost is assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsInternal"});
            table18.AddRow(new string[] {
                        "PlanningApi",
                        "true"});
            table18.AddRow(new string[] {
                        "openid",
                        "true"});
#line 65
 testRunner.And("the scopes are defined", ((string)(null)), table18, "And ");
#line 69
 testRunner.And("the scopes openid,PlanningApi are assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Name"});
            table19.AddRow(new string[] {
                        "habarthierry@loki.be",
                        "thabart"});
#line 70
 testRunner.And("create a resource owner", ((string)(null)), table19, "And ");
#line 73
 testRunner.And("authenticate the resource owner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And("the consent has been given by the resource owner habarthierry@loki.be for the cli" +
                    "ent MyHolidays and scopes openid,PlanningApi", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "scope",
                        "response_type",
                        "client_id",
                        "redirect_uri",
                        "prompt",
                        "state"});
            table20.AddRow(new string[] {
                        "openid PlanningApi",
                        "code",
                        "MyHolidays",
                        "http://localhost",
                        "none",
                        "state1"});
#line 76
 testRunner.When("requesting an authorization code", ((string)(null)), table20, "When ");
#line 81
 testRunner.Then("HTTP status code is 302", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 82
 testRunner.And("redirect to callback http://localhost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.And("the query string state with value state1 is returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.And("the query string code exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GetAuthorizationCode")]
        [Xunit.TraitAttribute("Description", "A resource owner is authenticated and he already has given his consent. We want t" +
            "o retrieve an authorization code in the fragment")]
        public virtual void AResourceOwnerIsAuthenticatedAndHeAlreadyHasGivenHisConsent_WeWantToRetrieveAnAuthorizationCodeInTheFragment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A resource owner is authenticated and he already has given his consent. We want t" +
                    "o retrieve an authorization code in the fragment", ((string[])(null)));
#line 87
this.ScenarioSetup(scenarioInfo);
#line 88
 testRunner.Given("a mobile application MyHolidays is defined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 89
 testRunner.And("the redirection uri http://localhost is assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsInternal"});
            table21.AddRow(new string[] {
                        "PlanningApi",
                        "true"});
            table21.AddRow(new string[] {
                        "openid",
                        "true"});
#line 90
 testRunner.And("the scopes are defined", ((string)(null)), table21, "And ");
#line 94
 testRunner.And("the scopes openid,PlanningApi are assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Name"});
            table22.AddRow(new string[] {
                        "habarthierry@loki.be",
                        "thabart"});
#line 95
 testRunner.And("create a resource owner", ((string)(null)), table22, "And ");
#line 98
 testRunner.And("authenticate the resource owner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
 testRunner.And("the consent has been given by the resource owner habarthierry@loki.be for the cli" +
                    "ent MyHolidays and scopes openid,PlanningApi", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "scope",
                        "response_type",
                        "client_id",
                        "redirect_uri",
                        "prompt",
                        "state",
                        "response_mode"});
            table23.AddRow(new string[] {
                        "openid PlanningApi",
                        "code",
                        "MyHolidays",
                        "http://localhost",
                        "none",
                        "state1",
                        "fragment"});
#line 101
 testRunner.When("requesting an authorization code", ((string)(null)), table23, "When ");
#line 106
 testRunner.Then("HTTP status code is 302", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 107
 testRunner.And("redirect to callback http://localhost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
 testRunner.And("the fragment contains the query state with the value state1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.And("the fragment contains the query string code", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GetAuthorizationCode")]
        [Xunit.TraitAttribute("Description", "A resource owner is authenticated and he already has given his consent. We want t" +
            "o retrieve an authorization code in the post")]
        public virtual void AResourceOwnerIsAuthenticatedAndHeAlreadyHasGivenHisConsent_WeWantToRetrieveAnAuthorizationCodeInThePost()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A resource owner is authenticated and he already has given his consent. We want t" +
                    "o retrieve an authorization code in the post", ((string[])(null)));
#line 111
this.ScenarioSetup(scenarioInfo);
#line 112
 testRunner.Given("a mobile application MyHolidays is defined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 113
 testRunner.And("the redirection uri http://localhost is assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsInternal"});
            table24.AddRow(new string[] {
                        "PlanningApi",
                        "true"});
            table24.AddRow(new string[] {
                        "openid",
                        "true"});
#line 114
 testRunner.And("the scopes are defined", ((string)(null)), table24, "And ");
#line 118
 testRunner.And("the scopes openid,PlanningApi are assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Name"});
            table25.AddRow(new string[] {
                        "habarthierry@loki.be",
                        "thabart"});
#line 119
 testRunner.And("create a resource owner", ((string)(null)), table25, "And ");
#line 122
 testRunner.And("authenticate the resource owner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
 testRunner.And("the consent has been given by the resource owner habarthierry@loki.be for the cli" +
                    "ent MyHolidays and scopes openid,PlanningApi", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "scope",
                        "response_type",
                        "client_id",
                        "redirect_uri",
                        "prompt",
                        "state",
                        "response_mode"});
            table26.AddRow(new string[] {
                        "openid PlanningApi",
                        "code",
                        "MyHolidays",
                        "http://localhost",
                        "none",
                        "state1",
                        "form_post"});
#line 125
 testRunner.When("requesting an authorization code", ((string)(null)), table26, "When ");
#line 130
 testRunner.Then("HTTP status code is 302", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 131
 testRunner.And("redirect to callback http://localhost/Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GetAuthorizationCode")]
        [Xunit.TraitAttribute("Description", "a resource owner is not authenticated. We want to retrieve an authorization code " +
            "and the prompt parameter value is not specified")]
        public virtual void AResourceOwnerIsNotAuthenticated_WeWantToRetrieveAnAuthorizationCodeAndThePromptParameterValueIsNotSpecified()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("a resource owner is not authenticated. We want to retrieve an authorization code " +
                    "and the prompt parameter value is not specified", ((string[])(null)));
#line 134
this.ScenarioSetup(scenarioInfo);
#line 135
 testRunner.Given("a mobile application MyHolidays is defined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 136
 testRunner.And("the redirection uri http://localhost is assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsInternal"});
            table27.AddRow(new string[] {
                        "PlanningApi",
                        "true"});
            table27.AddRow(new string[] {
                        "openid",
                        "true"});
#line 137
 testRunner.And("the scopes are defined", ((string)(null)), table27, "And ");
#line 141
 testRunner.And("the scopes openid,PlanningApi are assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
 testRunner.And("the consent has been given by the resource owner habarthierry@loki.be for the cli" +
                    "ent MyHolidays and scopes openid,PlanningApi", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "scope",
                        "response_type",
                        "client_id",
                        "redirect_uri",
                        "state"});
            table28.AddRow(new string[] {
                        "openid PlanningApi",
                        "code",
                        "MyHolidays",
                        "http://localhost",
                        "state1"});
#line 144
 testRunner.When("requesting an authorization code", ((string)(null)), table28, "When ");
#line 149
 testRunner.Then("HTTP status code is 302", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 150
 testRunner.And("redirect to /Authenticate controller", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GetAuthorizationCode")]
        [Xunit.TraitAttribute("Description", "a resource owner is authenticated. We want to retrieve an authorization code and " +
            "the prompt parameter value is not specified")]
        public virtual void AResourceOwnerIsAuthenticated_WeWantToRetrieveAnAuthorizationCodeAndThePromptParameterValueIsNotSpecified()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("a resource owner is authenticated. We want to retrieve an authorization code and " +
                    "the prompt parameter value is not specified", ((string[])(null)));
#line 152
this.ScenarioSetup(scenarioInfo);
#line 153
 testRunner.Given("a mobile application MyHolidays is defined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 154
 testRunner.And("the redirection uri http://localhost is assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsInternal"});
            table29.AddRow(new string[] {
                        "PlanningApi",
                        "true"});
            table29.AddRow(new string[] {
                        "openid",
                        "true"});
#line 155
 testRunner.And("the scopes are defined", ((string)(null)), table29, "And ");
#line 159
 testRunner.And("the scopes openid,PlanningApi are assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Name"});
            table30.AddRow(new string[] {
                        "habarthierry@loki.be",
                        "thabart"});
#line 160
 testRunner.And("create a resource owner", ((string)(null)), table30, "And ");
#line 163
 testRunner.And("authenticate the resource owner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "scope",
                        "response_type",
                        "client_id",
                        "redirect_uri",
                        "state"});
            table31.AddRow(new string[] {
                        "openid PlanningApi",
                        "code",
                        "MyHolidays",
                        "http://localhost",
                        "state1"});
#line 165
 testRunner.When("requesting an authorization code", ((string)(null)), table31, "When ");
#line 170
 testRunner.Then("HTTP status code is 302", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 171
 testRunner.And("redirect to /Consent controller", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GetAuthorizationCode")]
        [Xunit.TraitAttribute("Description", "A resource owner is not authenticated but we want to directly retrieve the author" +
            "ization code into the callback")]
        public virtual void AResourceOwnerIsNotAuthenticatedButWeWantToDirectlyRetrieveTheAuthorizationCodeIntoTheCallback()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A resource owner is not authenticated but we want to directly retrieve the author" +
                    "ization code into the callback", ((string[])(null)));
#line 174
this.ScenarioSetup(scenarioInfo);
#line 175
 testRunner.Given("a mobile application MyHolidays is defined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 176
 testRunner.And("the redirection uri http://localhost is assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsInternal"});
            table32.AddRow(new string[] {
                        "PlanningApi",
                        "true"});
            table32.AddRow(new string[] {
                        "openid",
                        "true"});
#line 177
 testRunner.And("the scopes are defined", ((string)(null)), table32, "And ");
#line 181
 testRunner.And("the scopes openid,PlanningApi are assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "scope",
                        "response_type",
                        "client_id",
                        "redirect_uri",
                        "prompt",
                        "state"});
            table33.AddRow(new string[] {
                        "openid PlanningApi",
                        "code",
                        "MyHolidays",
                        "http://localhost",
                        "none",
                        "state1"});
#line 183
 testRunner.When("requesting an authorization code", ((string)(null)), table33, "When ");
#line 187
 testRunner.Then("HTTP status code is 400", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "error",
                        "state"});
            table34.AddRow(new string[] {
                        "login_required",
                        "state1"});
#line 188
 testRunner.And("the error returned is", ((string)(null)), table34, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GetAuthorizationCode")]
        [Xunit.TraitAttribute("Description", "a resource owner is authenticated and we want to retrieve the authorization code " +
            "into the callback without his consent")]
        public virtual void AResourceOwnerIsAuthenticatedAndWeWantToRetrieveTheAuthorizationCodeIntoTheCallbackWithoutHisConsent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("a resource owner is authenticated and we want to retrieve the authorization code " +
                    "into the callback without his consent", ((string[])(null)));
#line 192
this.ScenarioSetup(scenarioInfo);
#line 193
 testRunner.Given("a mobile application MyHolidays is defined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 194
 testRunner.And("the redirection uri http://localhost is assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsInternal"});
            table35.AddRow(new string[] {
                        "PlanningApi",
                        "true"});
            table35.AddRow(new string[] {
                        "openid",
                        "true"});
#line 195
 testRunner.And("the scopes are defined", ((string)(null)), table35, "And ");
#line 199
 testRunner.And("the scopes openid,PlanningApi are assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Name"});
            table36.AddRow(new string[] {
                        "habarthierry@loki.be",
                        "thabart"});
#line 200
 testRunner.And("create a resource owner", ((string)(null)), table36, "And ");
#line 203
 testRunner.And("authenticate the resource owner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "scope",
                        "response_type",
                        "client_id",
                        "redirect_uri",
                        "prompt",
                        "state"});
            table37.AddRow(new string[] {
                        "openid PlanningApi",
                        "code",
                        "MyHolidays",
                        "http://localhost",
                        "none",
                        "state1"});
#line 205
 testRunner.When("requesting an authorization code", ((string)(null)), table37, "When ");
#line 209
 testRunner.Then("HTTP status code is 400", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "error",
                        "state"});
            table38.AddRow(new string[] {
                        "interaction_required",
                        "state1"});
#line 210
 testRunner.And("the error returned is", ((string)(null)), table38, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GetAuthorizationCode")]
        [Xunit.TraitAttribute("Description", "a resource owner is not authenticated and we want to retrieve an authorization co" +
            "de by passing a malformed redirection_uri")]
        public virtual void AResourceOwnerIsNotAuthenticatedAndWeWantToRetrieveAnAuthorizationCodeByPassingAMalformedRedirection_Uri()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("a resource owner is not authenticated and we want to retrieve an authorization co" +
                    "de by passing a malformed redirection_uri", ((string[])(null)));
#line 214
this.ScenarioSetup(scenarioInfo);
#line 215
 testRunner.Given("a mobile application MyHolidays is defined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 216
 testRunner.And("the redirection uri http://localhost is assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsInternal"});
            table39.AddRow(new string[] {
                        "PlanningApi",
                        "true"});
            table39.AddRow(new string[] {
                        "openid",
                        "true"});
#line 217
 testRunner.And("the scopes are defined", ((string)(null)), table39, "And ");
#line 221
 testRunner.And("the scopes openid,PlanningApi are assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "scope",
                        "response_type",
                        "client_id",
                        "redirect_uri",
                        "prompt",
                        "state"});
            table40.AddRow(new string[] {
                        "openid PlanningApi",
                        "code",
                        "MyHolidays",
                        "localhost?invalid+2",
                        "none",
                        "state1"});
#line 223
 testRunner.When("requesting an authorization code", ((string)(null)), table40, "When ");
#line 227
 testRunner.Then("HTTP status code is 400", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "error",
                        "state"});
            table41.AddRow(new string[] {
                        "invalid_request",
                        "state1"});
#line 228
 testRunner.And("the error returned is", ((string)(null)), table41, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "GetAuthorizationCode")]
        [Xunit.TraitAttribute("Description", "a resource owner is not authenticated and we want to retrieve an authorization co" +
            "de with prompt equal to none and login")]
        public virtual void AResourceOwnerIsNotAuthenticatedAndWeWantToRetrieveAnAuthorizationCodeWithPromptEqualToNoneAndLogin()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("a resource owner is not authenticated and we want to retrieve an authorization co" +
                    "de with prompt equal to none and login", ((string[])(null)));
#line 232
this.ScenarioSetup(scenarioInfo);
#line 233
 testRunner.Given("a mobile application MyHolidays is defined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 234
 testRunner.And("the redirection uri http://localhost is assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "IsInternal"});
            table42.AddRow(new string[] {
                        "PlanningApi",
                        "true"});
            table42.AddRow(new string[] {
                        "openid",
                        "true"});
#line 235
 testRunner.And("the scopes are defined", ((string)(null)), table42, "And ");
#line 239
 testRunner.And("the scopes openid,PlanningApi are assigned to the client MyHolidays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "scope",
                        "response_type",
                        "client_id",
                        "redirect_uri",
                        "prompt",
                        "state"});
            table43.AddRow(new string[] {
                        "openid PlanningApi",
                        "code",
                        "MyHolidays",
                        "http://localhost",
                        "none login",
                        "state1"});
#line 241
 testRunner.When("requesting an authorization code", ((string)(null)), table43, "When ");
#line 245
 testRunner.Then("HTTP status code is 400", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "error",
                        "state"});
            table44.AddRow(new string[] {
                        "invalid_request",
                        "state1"});
#line 246
 testRunner.And("the error returned is", ((string)(null)), table44, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                GetAuthorizationCodeFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                GetAuthorizationCodeFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
