@{
    ViewBag.Title = "Edit user";
    ViewBag.IsEditDisplayed = true;
    ViewBag.IsSimulatorDisplayed = false;
    ViewBag.IsConsentDisplayed = false;
    ViewBag.IsIndexDisplayed = false;
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

@model SimpleIdentityServer.Startup.ViewModels.UpdateResourceOwnerViewModel
@using SimpleIdentityServer.Core.Models

<div class="tab-pane active" id="edit-ro">
    <div class="col-md-8 col-md-offset-2">
        <h1>
            @ViewBag.Translations[SimpleIdentityServer.Core.Constants.StandardTranslationCodes.EditResourceOwner]
        </h1>
        @if (ViewBag.IsUpdated)
        {
            <span class="text-success">@ViewBag.Translations[SimpleIdentityServer.Core.Constants.StandardTranslationCodes.UserIsUpdated]</span>
        }
        @using (Html.BeginForm("Edit", "User", null, FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <!-- Login -->
            <fieldset class="form-group">
                <label class="control-label">@ViewBag.Translations[SimpleIdentityServer.Core.Constants.StandardTranslationCodes.LoginCode]</label>
                @Html.TextBoxFor(i => i.Name, new { @class = "form-control", placeholder= @ViewBag.Translations[SimpleIdentityServer.Core.Constants.StandardTranslationCodes.YourLogin ] })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </fieldset>
            <!-- Hashed password -->
            <fieldset class="form-group">
                <label class="control-label">@ViewBag.Translations[SimpleIdentityServer.Core.Constants.StandardTranslationCodes.HashedPassword]</label>
                @Html.TextBoxFor(i => i.Password, new { type = "password", @class = "form-control", @readonly=true })
            </fieldset>
            <!-- Password -->
            <fieldset class="form-group">
                <label class="control-label">@ViewBag.Translations[SimpleIdentityServer.Core.Constants.StandardTranslationCodes.PasswordCode]</label>
                @Html.TextBoxFor(i => i.NewPassword, new { type="password", @class = "form-control", placeholder = @ViewBag.Translations[SimpleIdentityServer.Core.Constants.StandardTranslationCodes.YourPassword] })
            </fieldset>
            <!-- Email -->
            <fieldset class="form-group">
                <label class="control-label">@ViewBag.Translations[SimpleIdentityServer.Core.Constants.StandardTranslationCodes.Email]</label>
                @Html.TextBoxFor(i => i.Email, new { @class = "form-control", placeholder = @ViewBag.Translations[SimpleIdentityServer.Core.Constants.StandardTranslationCodes.YourEmail] })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </fieldset>
            <!-- Phone -->
            <fieldset class="form-group">
                <label class="control-label">@ViewBag.Translations[SimpleIdentityServer.Core.Constants.StandardTranslationCodes.Phone]</label>
                @Html.TextBoxFor(i => i.PhoneNumber, new { @class = "form-control", placeholder = @ViewBag.Translations[SimpleIdentityServer.Core.Constants.StandardTranslationCodes.Phone] })
                @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
            </fieldset>
            <!-- Two authentication factors -->
            <fieldset class="form-group">
                <label class="control-label">@ViewBag.Translations[SimpleIdentityServer.Core.Constants.StandardTranslationCodes.TwoAuthenticationFactor]</label>
                @Html.DropDownListFor(m => m.TwoAuthenticationFactor, Html.GetEnumSelectList(typeof(TwoFactorAuthentications)), new { @class = "form-control" })
            </fieldset>
            <!-- Submit -->
            <fieldset class="form-group">
                <button type="submit" class="btn btn-primary">@ViewBag.Translations[SimpleIdentityServer.Core.Constants.StandardTranslationCodes.ConfirmCode]</button>
            </fieldset>
        }
    </div>
</div>